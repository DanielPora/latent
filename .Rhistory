##    the probability of rejecting the Null hypothesis, given a specific effect size.
##    We can approximate this by calculating the proportion of simulated datasets,
##    where the effect comes out significant, i.e. below 0.05.
##    Calculate the power based on the simulations for all three effects of interest
##    (i.e., predA, predB and the interaction) individually.
library(dplyr)
nrow(filter(as.data.frame(results), predA < 0.05))/sim # 0.093
nrow(filter(as.data.frame(results), predB < 0.05))/sim # 1
nrow(filter(as.data.frame(results), interaction < 0.05))/sim # 1
## g) How does power change when you decrease your alpha level to 0.01?
nrow(filter(as.data.frame(results), predA < 0.01))/sim # 0.021
nrow(filter(as.data.frame(results), predB < 0.01))/sim # 1
nrow(filter(as.data.frame(results), interaction < 0.01))/sim # 1
simh = 1000 # number of simulations
nh   =50  # number of participants in each simulation
## results matrix
resultsh = matrix(nrow=simh, ncol=4)
colnames(resultsh) <- c("Intercept", "predA", "predB", "interaction")
for(i in c(1:sim)){
predA    <- rnorm(nh, 80, 20)
predB    <- rnorm(nh, 30, 30)
interact <- 0.08*(predA*predB)
error    <- rnorm(nh, 0, 50)
resp     <- 42 + 0.2*predA - 5.3*predB + interact + error
d        <- data.frame(predA, predB, resp)
m1       <- lm(resp~predA*predB, data=d)
## store the resulting p-values in the results matrix
resultsh[i,] = summary(m1)$coefficients[,4]
}
nrow(filter(as.data.frame(resultsh), predA < 0.05))/sim # 0.059
nrow(filter(as.data.frame(resultsh), predB < 0.05))/sim # 0.986
nrow(filter(as.data.frame(resultsh), interaction < 0.05))/sim # 0.996
clean <- read.csv("clean_F.csv")
setwd("C:/Studium/BA Latent Groups")
clean <- read.csv("clean_F.csv")
View(clean)
subj_tests <- clean %>%
subset("workerID", "aq_score_subset", "opt_score", "stroop_difference")
library(dplyr)
library(ggplot2)
subj_tests <- clean %>%
subset("workerID", "aq_score_subset", "opt_score", "stroop_difference")
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
View(subj_tests)
subj_tests <- clean %>%
group_by(workerID)%>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
View(subj_tests)
View(subj_tests)
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")%>%
group_by(workerID)
View(subj_tests)
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")%>%
distinct()
View(subj_tests)
ggplot(subj_tests, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
subj_tests_norm <- as.data.frame(scale(subj_tests[1:4]))
subj_tests_norm <- as.data.frame(scale(subj_tests[2:4]))
View(subj_tests_norm)
ggplot(subj_tests_norm, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
install.packages("corrr")
library('corrr')
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("ggcorrplot")
install.packages("ggcorrplot")
install.packages("ggcorrplot")
install.packages("ggcorrplot")
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library('corrr')
library(ggcorrplot)
install.packages("ggcorrplot")
install.packages("ggcorrplot")
library(ggcorrplot)
data_normalized <- subj_tests_norm %>%
select("aq_score_subset", "opt_score", "stroop_difference")
corr_matrix <- cor(data_normalized)
ggcorrplot(corr_matrix)
data_normalized <- subj_tests_norm %>%
select("aq_score_subset", "opt_score", "stroop_difference")
library(dplyr)
library(ggplot2)
data_normalized <- subj_tests_norm %>%
select("aq_score_subset", "opt_score", "stroop_difference")
View(data_normalized)
corr_matrix <- cor(data_normalized)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
fviz_eig(data.pca, addlabels = TRUE)
install.packages("FactoMineR")
library("FactoMineR")
fviz_eig(data.pca, addlabels = TRUE)
data.pca$loadings[, 1:2]
summary(data.pca)
library("factoextra")
install.packages("factoextra")
summary(data.pca)
fviz_pca_var(data.pca, col.var = "black")
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library('corrr')
library("FactoMineR")
library(ggcorrplot)
fviz_pca_var(data.pca, col.var = "black")
library("factoextra")
fviz_pca_var(data.pca, col.var = "black")
fviz_pca_ind(data.pca)
corr_matrix <- cor(subj_tests_norm)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
View(subj_tests_norm)
View(subj_tests_norm)
subj_tests_norm <- scale(subj_tests[2:4])
View(subj_tests_norm)
View(subj_tests_norm)
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
subj_tests_norm <- as.dataframe(scale(subj_tests[2:4]))
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
subj_tests_norm <- as.data.frame(scale(subj_tests[2:4]))
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
View(subj_tests_norm)
data_normalized <- subj_tests_norm %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
View(data_normalized)
corr_matrix <- cor(subj_tests_norm)
pca.res <- PCA(data_normalized, graph = FALSE)
data(decathlon2)
force(decathlon2)
View(decathlon2)
data_normalized %>% remove_rownames %>% column_to_rownames(var="workerID")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
data_normalized %>% remove_rownames %>% column_to_rownames(var="workerID")
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library(tidyverse)
library('corrr')
library("FactoMineR")
library("factoextra")
library(ggcorrplot)
data_normalized %>% remove_rownames %>% column_to_rownames(var="workerID")
d2 <- data_normalized[,-1]
rownames(d2) <- data_normalized[,1]
View(d2)
pca.res <- PCA(d2, graph = FALSE)
pca.res2 <- PCA(d2, graph = TRUE)
res.pca <- PCA(d2, graph = TRUE)
fviz_pca_ind(res.pca)
fviz_eig(res.pca)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
ibrary("vctrs")
library("vctrs")
fviz_eig(res.pca)
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library(tidyverse)
library('corrr')
#install.packages("tidyverse")
library("FactoMineR")
library("factoextra")
library(ggcorrplot)
library("vctrs")
fviz_eig(res.pca)
d2
View(d2)
ggplot(d2, aes(aq_score_subset))+
geom_histogram()
ggplot(d2, aes(opt_score))+
geom_histogram()
ggplot(d2, aes(stroop_difference))+
geom_histogram()
ggplot(d2, aes(opt_score))+
geom_histogram()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(aq_score_subset))+
geom_density()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(stroop_difference))+
geom_density()
ggcorrplot(corr_matrix)
library('corrr')
ggcorrplot(corr_matrix)
#install.packages("tidyverse")
library("FactoMineR")
library(ggcorrplot)
library(dplyr)
library(ggplot2)
library(ggcorrplot)
ggcorrplot(corr_matrix)
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library(tidyverse)
library('corrr')
#install.packages("tidyverse")
library("FactoMineR")
library("factoextra")
library(ggcorrplot)
library("vctrs")
dat_tar <- read.csv("data_s3_target.csv")
str(dat_tar)
dat_id <- read.csv("data_s3_ID.csv")
str(dat_id)
dat_aq <- read.csv("data_aq.csv")
str(dat_aq)
clean <- read.csv("clean_F.csv")
problems <- clean %>%
filter(clean$accuracy == "0")
fb_p <- problems %>%
filter(problems$targetPos == "F" |problems$targetPos == "B")
lr_p <- problems %>%
filter(problems$targetPos == "L" |problems$targetPos == "R")
length(problems)
length(fb_p)
length(lr_p)
by_subj <- clean %>%
group_by(workerID) %>%
summarise(resp_all = mean(respTime), sd_all = sd(respTime), own_sum_all = sum(own.cod), other_sum_all = sum(other.cod))
by_subj_diff <- clean %>%
filter(perspective == "different") %>%
group_by(workerID) %>%
summarise(resp_diff = mean(respTime), sd_diff = sd(respTime), own_sum_diff = sum(own.cod), other_sum_diff = sum(other.cod))
by_subj_same <- clean %>%
filter(perspective == "same") %>%
group_by(workerID) %>%
summarise(resp_same = mean(respTime), sd_same = sd(respTime), own_sum_same = sum(own.cod), other_sum_same = sum(other.cod))
by_subj <- mutate(by_subj, total_sum_all = own_sum_all+other_sum_all)
by_subj <- mutate(by_subj, direction_all = (own_sum_all-other_sum_all)/total_sum_all)
by_subj_diff <- mutate(by_subj_diff, total_sum_diff = own_sum_diff+other_sum_diff)
by_subj_diff <- mutate(by_subj_diff, direction_diff = (own_sum_diff-other_sum_diff)/total_sum_diff)
by_subj_same <- mutate(by_subj_same, total_sum_same = own_sum_same+other_sum_same)
by_subj_same <- mutate(by_subj_same, direction_same = (own_sum_same-other_sum_same)/total_sum_same)
direction_density <- density(by_subj$direction_all)
direction_density_diff <- density(by_subj_diff$direction_diff)
direction_density_same <- density(by_subj_same$direction_same)
plot(direction_density_diff, ylim = c(0,2), col = "blue")
lines(direction_density, col = "red")
lines(direction_density_same, col = "green")
legend("topleft", legend = c("All trials", "same", "different"),
lwd = 3, col = c("red", "green", "blue"))
hist(by_subj$direction_all, prob = TRUE, xlim = c(-1,1), ylim = c(0,10), col = "blue", breaks = 9)
hist(by_subj_diff$direction_diff, prob = TRUE, add=TRUE, col = "red", breaks = 9)
hist(by_subj_same$direction_same, prob = TRUE, add=TRUE, col = "green", breaks = 9)
ggplot(by_subj, aes(direction_all))
+ geom_histogram()
+geom_histogram(by_subj_diff, aes(direction_diff))
synth1000 <- read.csv("synth1000.csv")
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")%>%
distinct()
subj_tests_norm <- as.data.frame(scale(subj_tests[2:4]))
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
ggplot(subj_tests_norm, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
data_normalized <- subj_tests_norm %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
corr_matrix <- cor(subj_tests_norm)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
d2 <- data_normalized[,-1]
rownames(d2) <- data_normalized[,1]
res.pca <- PCA(d2, graph = TRUE)
ggplot(d2, aes(aq_score_subset))+
geom_density()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(stroop_difference))+
geom_density()
corr_matrix <- cor(d2)
ggcorrplot(corr_matrix)
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library(tidyverse)
library('corrr')
#install.packages("tidyverse")
library("FactoMineR")
library("factoextra")
library(ggcorrplot)
#library("vctrs")
dat_tar <- read.csv("data_s3_target.csv")
str(dat_tar)
dat_id <- read.csv("data_s3_ID.csv")
str(dat_id)
dat_aq <- read.csv("data_aq.csv")
str(dat_aq)
clean <- read.csv("clean_F.csv")
problems <- clean %>%
filter(clean$accuracy == "0")
fb_p <- problems %>%
filter(problems$targetPos == "F" |problems$targetPos == "B")
lr_p <- problems %>%
filter(problems$targetPos == "L" |problems$targetPos == "R")
length(problems)
length(fb_p)
length(lr_p)
by_subj <- clean %>%
group_by(workerID) %>%
summarise(resp_all = mean(respTime), sd_all = sd(respTime), own_sum_all = sum(own.cod), other_sum_all = sum(other.cod))
by_subj_diff <- clean %>%
filter(perspective == "different") %>%
group_by(workerID) %>%
summarise(resp_diff = mean(respTime), sd_diff = sd(respTime), own_sum_diff = sum(own.cod), other_sum_diff = sum(other.cod))
by_subj_same <- clean %>%
filter(perspective == "same") %>%
group_by(workerID) %>%
summarise(resp_same = mean(respTime), sd_same = sd(respTime), own_sum_same = sum(own.cod), other_sum_same = sum(other.cod))
by_subj <- mutate(by_subj, total_sum_all = own_sum_all+other_sum_all)
by_subj <- mutate(by_subj, direction_all = (own_sum_all-other_sum_all)/total_sum_all)
by_subj_diff <- mutate(by_subj_diff, total_sum_diff = own_sum_diff+other_sum_diff)
by_subj_diff <- mutate(by_subj_diff, direction_diff = (own_sum_diff-other_sum_diff)/total_sum_diff)
by_subj_same <- mutate(by_subj_same, total_sum_same = own_sum_same+other_sum_same)
by_subj_same <- mutate(by_subj_same, direction_same = (own_sum_same-other_sum_same)/total_sum_same)
direction_density <- density(by_subj$direction_all)
direction_density_diff <- density(by_subj_diff$direction_diff)
direction_density_same <- density(by_subj_same$direction_same)
plot(direction_density_diff, ylim = c(0,2), col = "blue")
lines(direction_density, col = "red")
lines(direction_density_same, col = "green")
legend("topleft", legend = c("All trials", "same", "different"),
lwd = 3, col = c("red", "green", "blue"))
hist(by_subj$direction_all, prob = TRUE, xlim = c(-1,1), ylim = c(0,10), col = "blue", breaks = 9)
hist(by_subj_diff$direction_diff, prob = TRUE, add=TRUE, col = "red", breaks = 9)
hist(by_subj_same$direction_same, prob = TRUE, add=TRUE, col = "green", breaks = 9)
ggplot(by_subj, aes(direction_all))+
geom_histogram()+
geom_histogram(by_subj_diff, aes(direction_diff))
synth1000 <- read.csv("synth1000.csv")
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")%>%
distinct()
subj_tests_norm <- as.data.frame(scale(subj_tests[2:4]))
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
ggplot(subj_tests_norm, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
data_normalized <- subj_tests_norm %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
d2 <- data_normalized[,-1]
rownames(d2) <- data_normalized[,1]
corr_matrix <- cor(d2)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
res.pca <- PCA(d2, graph = TRUE)
ggplot(d2, aes(aq_score_subset))+
geom_density()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(stroop_difference))+
geom_density()
library(dplyr)
library(ggplot2)
setwd("C:/Studium/BA Latent Groups")
library(ggcorrplot)
library(tidyverse)
library('corrr')
#install.packages("tidyverse")
library("FactoMineR")
library("factoextra")
#library("vctrs")
dat_tar <- read.csv("data_s3_target.csv")
str(dat_tar)
dat_id <- read.csv("data_s3_ID.csv")
str(dat_id)
dat_aq <- read.csv("data_aq.csv")
str(dat_aq)
clean <- read.csv("clean_F.csv")
problems <- clean %>%
filter(clean$accuracy == "0")
fb_p <- problems %>%
filter(problems$targetPos == "F" |problems$targetPos == "B")
lr_p <- problems %>%
filter(problems$targetPos == "L" |problems$targetPos == "R")
length(problems)
length(fb_p)
length(lr_p)
by_subj <- clean %>%
group_by(workerID) %>%
summarise(resp_all = mean(respTime), sd_all = sd(respTime), own_sum_all = sum(own.cod), other_sum_all = sum(other.cod))
by_subj_diff <- clean %>%
filter(perspective == "different") %>%
group_by(workerID) %>%
summarise(resp_diff = mean(respTime), sd_diff = sd(respTime), own_sum_diff = sum(own.cod), other_sum_diff = sum(other.cod))
by_subj_same <- clean %>%
filter(perspective == "same") %>%
group_by(workerID) %>%
summarise(resp_same = mean(respTime), sd_same = sd(respTime), own_sum_same = sum(own.cod), other_sum_same = sum(other.cod))
by_subj <- mutate(by_subj, total_sum_all = own_sum_all+other_sum_all)
by_subj <- mutate(by_subj, direction_all = (own_sum_all-other_sum_all)/total_sum_all)
by_subj_diff <- mutate(by_subj_diff, total_sum_diff = own_sum_diff+other_sum_diff)
by_subj_diff <- mutate(by_subj_diff, direction_diff = (own_sum_diff-other_sum_diff)/total_sum_diff)
by_subj_same <- mutate(by_subj_same, total_sum_same = own_sum_same+other_sum_same)
by_subj_same <- mutate(by_subj_same, direction_same = (own_sum_same-other_sum_same)/total_sum_same)
direction_density <- density(by_subj$direction_all)
direction_density_diff <- density(by_subj_diff$direction_diff)
direction_density_same <- density(by_subj_same$direction_same)
plot(direction_density_diff, ylim = c(0,2), col = "blue")
lines(direction_density, col = "red")
lines(direction_density_same, col = "green")
legend("topleft", legend = c("All trials", "same", "different"),
lwd = 3, col = c("red", "green", "blue"))
hist(by_subj$direction_all, prob = TRUE, xlim = c(-1,1), ylim = c(0,10), col = "blue", breaks = 9)
hist(by_subj_diff$direction_diff, prob = TRUE, add=TRUE, col = "red", breaks = 9)
hist(by_subj_same$direction_same, prob = TRUE, add=TRUE, col = "green", breaks = 9)
ggplot(by_subj, aes(direction_all))+
geom_histogram()
synth1000 <- read.csv("synth1000.csv")
subj_tests <- clean %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")%>%
distinct()
subj_tests_norm <- as.data.frame(scale(subj_tests[2:4]))
subj_tests_norm <- subj_tests_norm%>%
mutate("workerID" = subj_tests$workerID)
ggplot(subj_tests_norm, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
data_normalized <- subj_tests_norm %>%
select("workerID", "aq_score_subset", "opt_score", "stroop_difference")
d2 <- data_normalized[,-1]
rownames(d2) <- data_normalized[,1]
corr_matrix <- cor(d2)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
res.pca <- PCA(d2, graph = TRUE)
ggplot(d2, aes(aq_score_subset))+
geom_density()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(stroop_difference))+
geom_density()
corr_matrix
ggplot(d2, aes(aq_score_subset, opt_score))+
geom_point()
ggplot(d2, aes(aq_score_subset, stroop_difference))+
geom_point()
ggplot(d2, aes(aq_score_subset, opt_score))+
geom_point()
ggplot(d2, aes(stroop_difference, opt_score))+
geom_point()
pca <- prcomp(d2)
scale(newdata, pca$center, pca$scale) %*% pca$rotation
scale(d2, pca$center, pca$scale) %*% pca$rotation
rotated <- scale(d2, pca$center, pca$scale) %*% pca$rotation
View(rotated)
ggpolt(rotated, aes(PC1, PC2))+
geom_point()
ggplot(rotated, aes(PC1, PC2))+
geom_point()
rotated <- as.data.frame(scale(d2, pca$center, pca$scale) %*% pca$rotation)
ggplot(rotated, aes(PC1, PC2))+
geom_point()
ggplot(rotated, aes(PC1, PC2, size = PC3))+
geom_point()
ggplot(rotated, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
ggplot(d2, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
ggplot(rotated, aes(PC1, PC2, size = PC3))+
geom_point()
ggplot(d2, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
ggplot(d2, aes(opt_score))+
geom_density()
ggplot(d2, aes(aq_score_subset, opt_score, size = stroop_difference))+
geom_point()
View(d2)
pca2 <- prcomp(d2[c("stroop_difference", "aq_score_subset")])
rotated <- as.data.frame(scale(d2[c("stroop_difference", "aq_score_subset")], pca$center, pca$scale) %*% pca$rotation)
rotated2 <- as.data.frame(scale(d2[c("stroop_difference", "aq_score_subset")], pca2$center, pca2$scale) %*% pca$rotation)
rotated2 <- as.data.frame(scale(d2[c("stroop_difference", "aq_score_subset")], pca2$center, pca2$scale) %*% pca2$rotation)
View(rotated2)
View(rotated)
View(rotated2)
summary(pca2)
summary(pca)
ggplot(pca2, aes(PC1, PC2))+
geom_point()
ggplot(rotated2, aes(PC1, PC2))+
geom_point()
