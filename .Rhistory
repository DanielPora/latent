geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
(RI_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.class)))
(NMI_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.class)))
(RIc_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(NMIc_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(RI_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(NMI_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(RIc_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(NMIc_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(RI_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.class)))
(NMI_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.class)))
(RIc_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.tc)))
(NMIc_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.tc)))
ahp <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(1:5)%>%
compare_solutions(statistics=c("AIC", "BIC", "Entropy", "LogLik", "CLC", "KIC"))
lmem_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(ahp$AHP)
lmem_tc <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(n_true)
(RI_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(NMI_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(RIc_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(NMIc_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
library(aricode)
library(fossil)
library(poLCA)
library(plyr)
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyLPA)
library(lme4)
library(brms)
# Evaluation of a given dataset
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
input_string <- "./test_df_FB_LR.csv"
data  <- read.csv(input_string)
data$Subject <- factor(data$Subject)
data$true_class <- factor(data$true_class)
n_true <- length(levels(data$true_class))
n_obs <- nrow(dplyr::filter(data, Subject == 1))/2
# order the data
data <- data[with(data, order(Subject, trial_type, own.cod)), ]
# extend to wide format and naming accordingly
name_vec <- c()
suffixes <- rep(seq(1:(n_obs)), 2)
for (elem in dplyr::filter(data, Subject == 1)[2]){
name_vec <- append(name_vec, elem)
}
for (i in 1:length(name_vec)){
name_vec[i] <- paste(name_vec[i],suffixes[i], sep="")
}
data_with_index <- ddply(data, .(Subject), mutate,
index = name_vec[1:length(Subject)])
df.LCA_id <- reshape2::dcast(data_with_index, Subject ~ index, value.var = 'own.cod')
# for poLCA we will need only the value column and no zero or negative values
df.LCA <- df.LCA_id %>%
dplyr::select(-Subject)
df.LCA <- df.LCA+1
formula_func <- function(colnms1, dat) {
fmla <- as.formula(paste0("cbind(",
paste(colnms1, collapse=","), ")", " ~ ", 1))
mva <- manova(fmla, data = dat)
mva$call <- fmla
mva
}
f <- as.formula(with(df.LCA, formula_func(colnames(df.LCA), df.LCA)))
bics <- c()
for (x in 1:8) {
lca_x <- poLCA(f, df.LCA, nclass = x, nrep = 10, verbose=FALSE)$bic
bics <- append(bics, lca_x)
}
# 4 Class model with the best BIC
opt_class <- which.min(bics)
lca_3 <- poLCA(f, df.LCA, nclass = opt_class, nrep = 50, verbose=FALSE, graphs = FALSE)
lca_tc <- poLCA(f, df.LCA, nclass = n_true, nrep = 50, verbose=FALSE, graphs = FALSE)
df.LCA_classes <- df.LCA_id %>%
mutate('lca.class' = factor(lca_3$predclass))%>%
mutate('lca.tc' = factor(lca_tc$predclass))%>%
dplyr::select(Subject, lca.class, lca.tc)
data <- left_join(data, df.LCA_classes, by="Subject")
by_subj_fb <- dplyr::filter(data, trial_type == 'FB') %>%
group_by(Subject) %>%
summarise(fb_tend = sum(own.cod)/n_obs)
by_subj_lr <- dplyr::filter(data, trial_type == 'LR') %>%
group_by(Subject) %>%
summarise(lr_tend = sum(own.cod)/n_obs)
data <- left_join(data, by_subj_fb, by="Subject")
data <- left_join(data, by_subj_lr, by="Subject")
## eval plot for lca
ggplot(data, aes(lr_tend,fb_tend, color=lca.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
### lmem
m0 <- glmer(own.cod ~ trial_type + (trial_type | Subject), data=data, family = binomial())
coeffs <- coef(m0)$Subject
coeffs$FB <- coeffs$`(Intercept)`
coeffs$LR <- coeffs$`(Intercept)` + coeffs$trial_typeLR
ahp <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(1:5)%>%
compare_solutions(statistics=c("AIC", "BIC", "Entropy", "LogLik", "CLC", "KIC"))
lmem_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(ahp$AHP)
lmem_tc <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(n_true)
lmem_class <- get_data(lmem_mod)$Class %>%
factor()
lmem_class_tc <- get_data(lmem_tc)$Class %>%
factor()
lmem_class <- data.frame(Subject = 1:length(lmem_class),lmem.class = lmem_class)
lmem_class$Subject <- factor(lmem_class$Subject)
lmem_class_tc <- data.frame(Subject = 1:length(lmem_class_tc),lmem.tc = lmem_class_tc)
lmem_class_tc$Subject <- factor(lmem_class_tc$Subject)
data <- left_join(data, lmem_class, by="Subject")
data <- left_join(data, lmem_class_tc, by="Subject")
ggplot(data, aes(lr_tend,fb_tend, color=lmem.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
#### bayes
bm2 <- brm(data = data, own.cod ~ trial_type + (trial_type | Subject),
family = bernoulli(),
seed = 123,
cores = 8,
iter = 4000, warmup = 2000,
file = 'bm2')
bmcoeff <- coef(bm2)$Subject
coeffs <- coeffs %>%
mutate("FB_bmr" = bmcoeff[1:nrow(bmcoeff),1,1]) %>%
mutate("LR_bmr" = bmcoeff[1:nrow(bmcoeff),1,1] + bmcoeff[1:nrow(bmcoeff),1,2])
ahp <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(1:7)%>%
compare_solutions(statistics=c("AIC", "BIC", "Entropy", "LogLik"))
bm_mod <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(ahp$AHP)
bm_mod_tc <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(n_true)
bm_class_tc <- get_data(bm_mod_tc)$Class %>%
factor()
bm_class <- get_data(bm_mod)$Class %>%
factor()
bm_class <- data.frame(Subject = 1:length(bm_class),bm.class = bm_class)
bm_class$Subject <- factor(bm_class$Subject)
bm_class_tc <- data.frame(Subject = 1:length(bm_class_tc),bm.tc = bm_class_tc)
bm_class_tc$Subject <- factor(bm_class_tc$Subject)
data <- left_join(data, bm_class, by="Subject")
data <- left_join(data, bm_class_tc, by="Subject")
ggplot(data, aes(lr_tend,fb_tend, color=bm.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
(RI_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.class)))
(NMI_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.class)))
(RIc_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(NMIc_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(RI_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(NMI_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(RIc_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(NMIc_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(RI_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.class)))
(NMI_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.class)))
(RIc_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.tc)))
(NMIc_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.tc)))
for (i in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(i)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
print(rand.index(as.numeric(data$true_class),as.numeric(lmem_ri_class)))
}
for (i in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(i)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
ri <- rand.index(as.numeric(data$true_class),as.numeric(lmem_ri_class))
print(ri  )
}
for (i in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(i)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
ri <- rand.index(as.numeric(data$true_class),as.numeric(lmem_ri_class))
ri
}
for (i in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(i)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
}
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(3)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
for (number in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(number)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
}
for (number in 2:7){
print(number)
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(number)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
}
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(4)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(3)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
View(data)
library(aricode)
library(fossil)
library(poLCA)
library(plyr)
library(dplyr)
library(data.table)
library(ggplot2)
library(tidyLPA)
library(lme4)
library(brms)
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
input_string <- "./test_df_FB_LR.csv"
data  <- read.csv(input_string)
data$Subject <- factor(data$Subject)
data$true_class <- factor(data$true_class)
n_true <- length(levels(data$true_class))
n_obs <- nrow(dplyr::filter(data, Subject == 1))/2
# order the data
data <- data[with(data, order(Subject, trial_type, own.cod)), ]
# extend to wide format and naming accordingly
name_vec <- c()
suffixes <- rep(seq(1:(n_obs)), 2)
for (elem in dplyr::filter(data, Subject == 1)[2]){
name_vec <- append(name_vec, elem)
}
for (i in 1:length(name_vec)){
name_vec[i] <- paste(name_vec[i],suffixes[i], sep="")
}
data_with_index <- ddply(data, .(Subject), mutate,
index = name_vec[1:length(Subject)])
df.LCA_id <- reshape2::dcast(data_with_index, Subject ~ index, value.var = 'own.cod')
# for poLCA we will need only the value column and no zero or negative values
df.LCA <- df.LCA_id %>%
dplyr::select(-Subject)
df.LCA <- df.LCA+1
formula_func <- function(colnms1, dat) {
fmla <- as.formula(paste0("cbind(",
paste(colnms1, collapse=","), ")", " ~ ", 1))
mva <- manova(fmla, data = dat)
mva$call <- fmla
mva
}
f <- as.formula(with(df.LCA, formula_func(colnames(df.LCA), df.LCA)))
bics <- c()
for (x in 1:8) {
lca_x <- poLCA(f, df.LCA, nclass = x, nrep = 10, verbose=FALSE)$bic
bics <- append(bics, lca_x)
}
# 4 Class model with the best BIC
opt_class <- which.min(bics)
lca_3 <- poLCA(f, df.LCA, nclass = opt_class, nrep = 50, verbose=FALSE, graphs = FALSE)
lca_tc <- poLCA(f, df.LCA, nclass = n_true, nrep = 50, verbose=FALSE, graphs = FALSE)
df.LCA_classes <- df.LCA_id %>%
mutate('lca.class' = factor(lca_3$predclass))%>%
mutate('lca.tc' = factor(lca_tc$predclass))%>%
dplyr::select(Subject, lca.class, lca.tc)
data <- left_join(data, df.LCA_classes, by="Subject")
by_subj_fb <- dplyr::filter(data, trial_type == 'FB') %>%
group_by(Subject) %>%
summarise(fb_tend = sum(own.cod)/n_obs)
by_subj_lr <- dplyr::filter(data, trial_type == 'LR') %>%
group_by(Subject) %>%
summarise(lr_tend = sum(own.cod)/n_obs)
data <- left_join(data, by_subj_fb, by="Subject")
data <- left_join(data, by_subj_lr, by="Subject")
## eval plot for lca
ggplot(data, aes(lr_tend,fb_tend, color=lca.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
### lmem
m0 <- glmer(own.cod ~ trial_type + (trial_type | Subject), data=data, family = binomial())
coeffs <- coef(m0)$Subject
coeffs$FB <- coeffs$`(Intercept)`
coeffs$LR <- coeffs$`(Intercept)` + coeffs$trial_typeLR
ahp <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(1:5)%>%
compare_solutions(statistics=c("AIC", "BIC", "Entropy", "LogLik", "CLC", "KIC"))
lmem_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(ahp$AHP)
lmem_tc <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(n_true)
lmem_class <- get_data(lmem_mod)$Class %>%
factor()
lmem_class_tc <- get_data(lmem_tc)$Class %>%
factor()
lmem_class <- data.frame(Subject = 1:length(lmem_class),lmem.class = lmem_class)
lmem_class$Subject <- factor(lmem_class$Subject)
lmem_class_tc <- data.frame(Subject = 1:length(lmem_class_tc),lmem.tc = lmem_class_tc)
lmem_class_tc$Subject <- factor(lmem_class_tc$Subject)
data <- left_join(data, lmem_class, by="Subject")
data <- left_join(data, lmem_class_tc, by="Subject")
ggplot(data, aes(lr_tend,fb_tend, color=lmem.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
bm2 <- brm(data = data, own.cod ~ trial_type + (trial_type | Subject),
family = bernoulli(),
seed = 123,
cores = 8,
iter = 4000, warmup = 2000,
file = 'bm2')
bmcoeff <- coef(bm2)$Subject
coeffs <- coeffs %>%
mutate("FB_bmr" = bmcoeff[1:nrow(bmcoeff),1,1]) %>%
mutate("LR_bmr" = bmcoeff[1:nrow(bmcoeff),1,1] + bmcoeff[1:nrow(bmcoeff),1,2])
ahp <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(1:7)%>%
compare_solutions(statistics=c("AIC", "BIC", "Entropy", "LogLik"))
bm_mod <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(ahp$AHP)
bm_mod_tc <- coeffs %>%
dplyr::select(FB_bmr, LR_bmr) %>%
single_imputation() %>%
estimate_profiles(n_true)
bm_class_tc <- get_data(bm_mod_tc)$Class %>%
factor()
bm_class <- get_data(bm_mod)$Class %>%
factor()
bm_class <- data.frame(Subject = 1:length(bm_class),bm.class = bm_class)
bm_class$Subject <- factor(bm_class$Subject)
bm_class_tc <- data.frame(Subject = 1:length(bm_class_tc),bm.tc = bm_class_tc)
bm_class_tc$Subject <- factor(bm_class_tc$Subject)
data <- left_join(data, bm_class, by="Subject")
data <- left_join(data, bm_class_tc, by="Subject")
ggplot(data, aes(lr_tend,fb_tend, color=bm.class))+
geom_jitter(width=0.05, height=0.05, aes(shape=true_class))
(RI_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.class)))
(NMI_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.class)))
(RIc_LCA <- rand.index(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(NMIc_LCA <- NMI(as.numeric(data$true_class),as.numeric(data$lca.tc)))
(RI_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(NMI_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.class)))
(RIc_LMEM <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(NMIc_LMEM <- NMI(as.numeric(data$true_class),as.numeric(data$lmem.tc)))
(RI_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.class)))
(NMI_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.class)))
(RIc_BM <- rand.index(as.numeric(data$true_class),as.numeric(data$bm.tc)))
(NMIc_BM <- NMI(as.numeric(data$true_class),as.numeric(data$bm.tc)))
for (number in 2:7){
}
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(3)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data, lmem_ri_class, by="Subject")
View(data)
data <- left_join(data %>% dplyr::select(-lmem_ri.class), lmem_ri_class, by="Subject")
View(data)
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ri
for (number in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(3)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data %>% dplyr::select(-lmem_ri.class), lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
print(ri)
}
for (number in 2:7){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(number)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data %>% dplyr::select(-lmem_ri.class), lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
print(ri)
}
warnings()
for (number in 2:9){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(number)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data %>% dplyr::select(-lmem_ri.class), lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
print(ri)
}
for (number in 2:9){
lmem_ri_mod <- coeffs %>%
dplyr::select(FB, LR) %>%
single_imputation() %>%
estimate_profiles(number)
lmem_ri_class <- get_data(lmem_ri_mod)$Class %>%
factor()
lmem_ri_class <- factor(lmem_ri_class)
lmem_ri_class <- data.frame(Subject = 1:length(lmem_ri_class),lmem_ri.class = lmem_ri_class)
lmem_ri_class$Subject <- factor(lmem_ri_class$Subject)
data <- left_join(data %>% dplyr::select(-lmem_ri.class), lmem_ri_class, by="Subject")
ri <- rand.index(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
ni <- NMI(as.numeric(data$true_class),as.numeric(data$lmem_ri.class))
print(c(ri,ni))
}
